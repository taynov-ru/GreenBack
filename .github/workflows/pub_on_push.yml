name: Publish on Docker Hub and Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'

env:
  BOT_NAME: ${{secrets.BOT_NAME}}
  BOT_ADMIN: ${{secrets.BOT_ADMIN}}
  BOT_TOKEN: ${{secrets.BOT_TOKEN}}

jobs:
  build_jar:
    runs-on: arc-runner-set
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629
        with:
          arguments: build
      - uses: actions/upload-artifact@v4
        with:
          name: Package
          path: tg-bot-service/build/libs

  build-docker:
    runs-on: arc-runner-set # uses self-hosted runner scale set
    needs:
      - build_jar
    container:
      image: gcr.io/kaniko-project/executor:v1.20.0-debug # the kaniko image
    env:
      GH_REGISTRY: "https://index.docker.io/v1"
      IMAGE_NAME: "${{ github.repository }}/greenback"
      KANIKO_CACHE_ARGS: "--cache=true --cache-copy-layers=true --cache-ttl=24h"
    outputs:
      container_image: ${{ env.image }}
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3

      - uses: docker/metadata-action@v3
        id: metadata
        with:
          images: $GH_REGISTRY/${{ github.repository }}

      - uses: docker/login-action@v1
        with:
          registry: "$GH_REGISTRY"
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASS }}
      - uses: int128/kaniko-action@v1
        with:
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache: true
          cache-repository: ghcr.io/${{ github.repository }}/cache
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/download-artifact@v4
#        with:
#          name: Package
#      - name: Prepare image name
#        run: |
#          echo "image=$GH_REGISTRY/$IMAGE_NAME:$(echo ${GITHUB_SHA} | head  -c 7)" >> $GITHUB_ENV
#
#      - name: Build and Push Image with kaniko
#        env:
#          DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
#          DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
#        run: |
#          cat <<EOF > /kaniko/.docker/config.json
#          {
#            "auths": {
#              "$GH_REGISTRY": {
#                "auth": "$(echo -n "$DOCKER_LOGIN:$DOCKER_PASS" | base64 -w0)"
#              }
#            }
#          }
#          EOF
#
#          /kaniko/executor --dockerfile="./Dockerfile" \
#            --context="${{ github.repositoryUrl }}#${{ github.ref }}#${{ github.sha }}"  \
#            --destination="$${{ env.image }}" \
#            ${{ env.KANIKO_CACHE_ARGS }} \
#            --push-retry 5