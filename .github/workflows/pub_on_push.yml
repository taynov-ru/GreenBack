name: Publish on Docker Hub and Deploy

on:
  push:
    branches:
      - 'main'

env:
  DEPLOYMENT_SERVER: ${{secrets.DEPLOYMENT_SERVER}}
  DEPLOYMENT_PORT: ${{secrets.DEPLOYMENT_PORT}}
  DEPLOYMENT_TOKEN: ${{secrets.DEPLOYMENT_TOKEN}}
  HOST_DATA_PATH: ${{secrets.HOST_DATA_PATH}}
  DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
  DOCKER_NAME: ${{ secrets.DOCKER_NAME }}
  DOCKER_PASS: ${{secrets.DOCKER_PASS}}
  BOT_NAME: ${{secrets.BOT_NAME}}
  BOT_ADMIN: ${{secrets.BOT_ADMIN}}
  BOT_TOKEN: ${{secrets.BOT_TOKEN}}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Gradle Tests
        run: |
          ./gradlew test

  build_jar:
    runs-on: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@ccb4328a959376b642e027874838f60f8e596de3
      - name: Build with Gradle
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629
        with:
          arguments: build
      - uses: actions/upload-artifact@v4
        with:
          name: Package
          path: tg-bot-service/build/libs

  build_and_pub:
    needs: [ test, build_jar ]
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Login to Docker registry
        run: echo ${DOCKER_PASS} | docker login -u $DOCKER_LOGIN --password-stdin
        env:
          DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
          DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4
        with:
          name: Package
      - name: Build image
        run: docker build -t $DOCKER_LOGIN/$DOCKER_NAME:${GITHUB_REF:11} -f Dockerfile .
      - name: Push image to docker.io
        run: docker push $DOCKER_LOGIN/$DOCKER_NAME:${GITHUB_REF:11}

  deploy:
    needs: [ build_and_pub ]
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Set tag to env
        run: echo "RELEASE_VERSION=$(echo ${GITHUB_REF:11})" >> $GITHUB_ENV
      - name: Send webhook for deploy
        run: |
          curl -v --silent --show-error --fail -X POST http://${{env.DEPLOYMENT_SERVER}}:${{env.DEPLOYMENT_PORT}}/ -H "Authorization: ${{env.DEPLOYMENT_TOKEN}}" -H 'Content-Type: application/json' -d '{"owner": "${{env.DOCKER_LOGIN}}", "repository": "${{env.DOCKER_NAME}}", "tag": "${{ env.RELEASE_VERSION }}", "kwargs": {"detach": true, "restart_policy": {"Name": "always"}, "ports": {"5005/tcp": 5005}, "environment": {"BOT_TOKEN": "${{env.BOT_TOKEN}}", "BOT_ADMIN": "${{env.BOT_ADMIN}}", "BOT_NAME": "${{env.BOT_NAME}}"}, "volumes": {"${{env.HOST_DATA_PATH}}": { "bind": "/app/db", "mode": "rw"}}}}'